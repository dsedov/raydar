raw_spd = "0.01922	0.222348	0.425476	0.628604	0.831732	1.03486	1.23799	1.44112	1.64424	1.84737	2.0505	2.62329	3.19608	3.76887	4.34166	4.91445	5.48724	6.06003	6.63282	7.20561	7.7784	8.47531	9.17222	9.86913	10.566	11.263	11.9599	12.6568	13.3537	14.0506	14.7475	15.0676	15.3876	15.7076	16.0277	16.3478	16.6678	16.9878	17.3079	17.628	17.948	18.2542	18.5603	18.8665	19.1727	19.4788	19.785	20.0912	20.3974	20.7035	21.0097	21.3029	21.5961	21.8894	22.1826	22.4758	22.769	23.0622	23.3555	23.6487	23.9419	24.2438	24.5457	24.8475	25.1494	25.4513	25.7532	26.0551	26.3569	26.6588	26.9607	26.7134	26.4661	26.2187	25.9714	25.7241	25.4768	25.2295	24.9821	24.7348	24.4875	25.0258	25.5641	26.1024	26.6407	27.179	27.7174	28.2557	28.794	29.3323	29.8706	31.8144	33.7581	35.7018	37.6456	39.5894	41.5331	43.4768	45.4206	47.3644	49.3081	50.0286	50.749	51.4695	52.19	52.9104	53.6309	54.3514	55.0719	55.7923	56.5128	56.8649	57.217	57.5691	57.9212	58.2733	58.6254	58.9775	59.3296	59.6817	60.0338	59.8122	59.5905	59.3689	59.1473	58.9256	58.704	58.4824	58.2608	58.0391	57.8175	59.5182	61.219	62.9197	64.6205	66.3212	68.0219	69.7227	71.4234	73.1242	74.8249	76.0671	77.3094	78.5516	79.7938	81.036	82.2783	83.5205	84.7627	86.005	87.2472	87.5837	87.9202	88.2567	88.5932	88.9297	89.2662	89.6027	89.9392	90.2757	90.6122	90.6878	90.7634	90.839	90.9146	90.9902	91.0657	91.1413	91.2169	91.2925	91.3681	91.7421	92.1162	92.4902	92.8643	93.2383	93.6123	93.9864	94.3604	94.7345	95.1085	94.7939	94.4793	94.1648	93.8502	93.5356	93.221	92.9064	92.5919	92.2773	91.9627	92.3388	92.7149	93.091	93.4671	93.8432	94.2193	94.5954	94.9715	95.3476	95.7237	95.8127	95.9016	95.9906	96.0795	96.1685	96.2575	96.3464	96.4354	96.5243	96.6133	96.6649	96.7164	96.768	96.8196	96.8712	96.9227	96.9743	97.0259	97.0774	97.129	97.626	98.123	98.62	99.117	99.614	100.111	100.608	101.105	101.602	102.099	101.965	101.83	101.696	101.561	101.427	101.292	101.158	101.024	100.889	100.755	100.911	101.067	101.223	101.38	101.536	101.692	101.848	102.005	102.161	102.317	102.085	101.854	101.622	101.39	101.158	100.927	100.695	100.463	100.232	100	99.7735	99.547	99.3205	99.094	98.8675	98.641	98.4145	98.188	97.9615	97.735	97.8533	97.9716	98.0899	98.2082	98.3265	98.4448	98.5631	98.6814	98.7997	98.918	98.3761	97.8342	97.2922	96.7503	96.2084	95.6665	95.1246	94.5826	94.0407	93.4988	93.9177	94.3366	94.7555	95.1744	95.5933	96.0122	96.4311	96.85	97.2689	97.6878	97.8459	98.0041	98.1622	98.3203	98.4784	98.6366	98.7947	98.9528	99.111	99.2691	99.2463	99.2236	99.2008	99.1781	99.1553	99.1325	99.1098	99.087	99.0643	99.0415	98.7095	98.3776	98.0456	97.7136	97.3816	97.0497	96.7177	96.3857	96.0538	95.7218	96.0353	96.3489	96.6624	96.976	97.2895	97.603	97.9166	98.2301	98.5437	98.8572	98.5382	98.2192	97.9002	97.5812	97.2622	96.9432	96.6242	96.3052	95.9862	95.6672	95.9195	96.1717	96.424	96.6762	96.9285	97.1808	97.433	97.6853	97.9375	98.1898	98.6712	99.1525	99.6339	100.115	100.597	101.078	101.559	102.041	102.522	103.003	102.616	102.229	101.842	101.455	101.068	100.681	100.294	99.9071	99.52	99.133	97.9578	96.7826	95.6074	94.4322	93.257	92.0817	90.9065	89.7313	88.5561	87.3809	87.8032	88.2254	88.6477	89.0699	89.4922	89.9145	90.3367	90.759	91.1812	91.6035	91.732	91.8605	91.989	92.1175	92.246	92.3746	92.5031	92.6316	92.7601	92.8886	91.2852	89.6818	88.0783	86.4749	84.8715	83.2681	81.6647	80.0612	78.4578	76.8544	77.8201	78.7858	79.7514	80.7171	81.6828	82.6485	83.6142	84.5798	85.5455	86.5112	87.1181	87.7249	88.3318	88.9386	89.5455	90.1524	90.7592	91.3661	91.9729	92.5798	91.1448	89.7098	88.2748	86.8398	85.4048	83.9699	82.5349	81.0999	79.6649	78.2299	76.1761	74.1223	72.0685	70.0147	67.9608	65.907	63.8532	61.7994	59.7456	57.6918	60.2149	62.738	65.2612	67.7843	70.3074	72.8305	75.3536	77.8768	80.3999	82.923	82.4581	81.9932	81.5283	81.0634	80.5985	80.1336	79.6687	79.2038	78.7389	78.274	78.402	78.5301	78.6581	78.7862	78.9142	79.0422	79.1703	79.2983	79.4264	79.5544	78.9391	78.3238	77.7085	77.0932	76.478	75.8627	75.2474	74.6321	74.0168	73.4015	72.4534	71.5052	70.5571	69.609	68.6608	67.7127	66.7646	65.8165	64.8683	63.9202	64.6059	65.2916	65.9772	66.6629	67.3486	68.0343	68.72	69.4056	70.0913	70.777	71.1435	71.5099	71.8764	72.2429	72.6094	72.9758	73.3423	73.7088	74.0752	74.441"
start_wavelength = 360
end_wavelength = 780

start_wavelength = 300
end_wavelength = 830

target_first = 400 
target_last = 700
step = 10

import numpy as np
from scipy import interpolate

# Convert raw_spd to numpy array
spd_values = np.array([float(x) for x in raw_spd.split()])

# Create wavelength array for the original data
original_wavelengths = np.linspace(start_wavelength, end_wavelength, len(spd_values))

# Create interpolation function
f = interpolate.interp1d(original_wavelengths, spd_values, kind='cubic', fill_value='extrapolate')

# Create target wavelength array
target_wavelengths = np.arange(target_first, target_last + step, step)

# Interpolate values at target wavelengths
target_values = f(target_wavelengths)

# Normalize the target values by the area under the curve
area = np.trapz(target_values, target_wavelengths)
target_values /= area
target_values *= 10000.0

# Print the result in a format suitable for C++ array initialization
print("static const double converted_spd[] = {")
for i, value in enumerate(target_values):
    if i % 5 == 0:  # Start a new line every 5 values
        print("    ", end="")
    print(f"{value:.16f}", end="")
    if i < len(target_values) - 1:
        print(", ", end="")
    if (i + 1) % 5 == 0 or i == len(target_values) - 1:
        print()
print("};")

print(f"\n// Number of samples: {len(target_values)}")
print(f"// Wavelength range: {target_first}nm to {target_last}nm")
print(f"// Step size: {step}nm")
